name: AppFlow CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r main/requirements.txt
        pip install pytest pytest-cov
        
    - name: Run Python tests
      run: |
        pytest main/tests/ --cov=main --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: |
        npm ci
        
    - name: Run React tests
      working-directory: ./frontend
      run: |
        npm test -- --coverage
        
  build:
    name: Build Application
    needs: test
    if: success() && (github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')))
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: appflow-linux
          - os: windows-latest
            artifact_name: appflow-windows
          - os: macos-latest
            artifact_name: appflow-macos
            
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install -r main/requirements.txt
        pip install pyinstaller
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: |
        npm ci
        
    - name: Build Python backend
      run: |
        pyinstaller build/pyinstaller.spec
        
    - name: Build Electron frontend (Linux/macOS)
      if: runner.os != 'Windows'
      working-directory: ./frontend
      run: |
        npm run build
        npx electron-builder --config ../build/electron-builder.json --${{ matrix.os == 'ubuntu-latest' && 'linux' || 'mac' }} --publish never
        
    - name: Build Electron frontend (Windows)
      if: runner.os == 'Windows'
      working-directory: ./frontend
      run: |
        npm run build
        npx electron-builder --config ../build/electron-builder.json --win --publish never
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          frontend/dist/*.exe
          frontend/dist/*.AppImage
          frontend/dist/*.dmg
          frontend/dist/*.zip
          
  release:
    name: Create Release
    needs: build
    if: success() && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          appflow-windows/**
          appflow-linux/**
          appflow-macos/**
        draft: true
        prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc') }}
        body_path: ${{ github.workspace }}/CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
